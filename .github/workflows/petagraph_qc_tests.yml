# This is a basic workflow to help you get started with Actions

name: petagraph_qc_tests
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  #workflow_dispatch:

jobs:
  # This workflow contains a single job called "run_qc"
  run_qc:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      neo4j_build:
        image: neo4j:4.2.0-enterprise
        env:
          NEO4J_dbms_security_procedures_unrestricted: apoc.*
          NEO4J_dbms_connector_bolt_enabled: "true"
          NEO4J_apoc_import_file_enabled: "true"
          NEO4J_apoc_export_file_enabled: "true"
          NEO4J_apoc_import_file_use__neo4j__config: "true"
          NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"
          NEO4J_dbms_security_auth__enabled: "false"
          NEO4J_dbms_connector_bolt_advertised__address: localhost:7687
          NEO4JLABS_PLUGINS: '["apoc"]'
        options: >-
          --health-cmd "cypher-shell 'match (n) return count(n)'"
          --health-timeout 10s
          --health-retries 20
          --health-interval 10s
          --health-start-period 30s
        
        ports:
          - 7687:7687

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - run: /bin/neo4j
      - name: checkout repo (and lfs files!)
        uses: actions/checkout@v3
        with:
          lfs: true
      - name: Checkout LFS objects
        run: |
            git lfs checkout
            ls data
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          architecture: 'x64'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-tests.txt
          echo 'Downloading OSF data...';
          osf -p 6jtc9 fetch Datasets/Datasets.zip Datasets.zip;
          echo 'Finished Download....';
          ls;
          echo 'Unzipping...';
          unzip Datasets.zip;
          echo '--------------------'
          ls PetagraphData
      - shell: bash
        env:
          NEO4J_PASSWORD: ${{ secrets.NEO4J_TAYLORLAB_PASSWORD }}
        run: echo '' #example-command tests --"$NEO4J_PASSWORD"
      #- name: Test with pytest
      #  run: |
      #    cd tests;
      #    pytest tests.py --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
      

